# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "IPCX" ]
  pull_request:
    branches: [ "IPCX" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
    
    - name: Detect profile
      run: conan profile detect
    
    - name: build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: ./bootstrap.sh

  tests:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
     - uses: actions/checkout@v2

     - name: gcc/g++
       run: |
         sudo apt-get install gcc-13
         sudo apt-get install g++-13
         sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 130 --slave /usr/bin/g++ g++ /usr/bin/g++-13  

     - name: install gcovr
       run: |
         pip install --user -U gcovr

     - name: Install Conan
       id: conan
       uses: turtlebrowser/get-conan@main
    
     - name: Detect profile
       run: conan profile detect

     - name: run
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
       run: |
        cd test
        ./bootstrap.sh
